plugins {
    id 'java'
    id 'com.novoda.build-properties' version '0.4.1'
}

buildProperties {
    secrets {
        using project.file('secrets.properties')
    }
}

ext {
    cucumberVersion = '5.5.0'
}

group 'org.proton'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.4'
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    testImplementation "io.cucumber:cucumber-java:$cucumberVersion"
    testImplementation "io.cucumber:cucumber-junit:$cucumberVersion"
}

tasks.withType(JavaExec) {
    systemProperties System.properties
}

task cucumber() {
    dependsOn assemble, compileTestJava
    String username = buildProperties.secrets['username'].string
    String password = buildProperties.secrets['password'].string
    if (System.properties.containsKey("protonUsername")) {
        username = System.getProperty("protonUsername")
    }
    if (System.properties.containsKey("protonPassword")) {
        password = System.getProperty("protonPassword")
    }
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            systemProperty "browser", System.getProperty("browser")
            systemProperty "protonUsername", username
            systemProperty "protonPassword", password
            args = ['--plugin', 'pretty', '--plugin', 'html:target/cucumber-reports', '--strict', '--glue', 'web.proton.steps', 'src/test/resources/']
        }
    }
}